Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                              lcd_clock.o (__udivmodqi4)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                              lcd_clock.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                              lcd_clock.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
                              lcd_clock.o (itoa)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
LOAD lcd_clock.o
LOAD lcd.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x4cc
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_20
 .text          0x000000a6      0x18e lcd_clock.o
                0x000000a6                wait_until_key_pressed
                0x000000b6                LCD_update_time
                0x000001a4                __vector_11
 .text          0x00000234      0x1a0 lcd.o
                0x000002c2                lcd_command
                0x000002d4                lcd_data
                0x000002e6                lcd_gotoxy
                0x000002f4                lcd_getxy
                0x000002fc                lcd_clrscr
                0x00000302                lcd_home
                0x00000308                lcd_putc
                0x00000330                lcd_puts
                0x00000348                lcd_puts_p
                0x00000364                lcd_init
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .text          0x000003d4        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000003d4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000003d4       0x52 lcd_clock.o
                0x000003d4                main
 .text.libgcc.mul
                0x00000426        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x00000426       0x18 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                0x00000426                __udivmodqi4
 .text.libgcc   0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000043e        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000043e       0x42 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
                0x0000043e                itoa
 .text.avr-libc
                0x00000480       0x20 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000480                strrev
 .text.libgcc.mul
                0x000004a0        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000004a0       0x28 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000004a0                __udivmodhi4
 .text.libgcc   0x000004c8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000004c8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000004c8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000004c8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                0x000004c8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000004c8        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                0x000004c8                exit
                0x000004c8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000004c8        0x4 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000004cc                _etext = .

.data           0x00800100       0x1a load address 0x000004cc
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0xa lcd_clock.o
                0x00800100                time
                0x00800109                hours
 .data          0x0080010a        0x0 lcd.o
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x0080010a        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0080010a        0xf lcd_clock.o
 *(.gnu.linkonce.d*)
                0x0080011a                . = ALIGN (0x2)
 *fill*         0x00800119        0x1 00
                0x0080011a                _edata = .
                0x0080011a                PROVIDE (__data_end, .)

.bss            0x0080011a        0x3
                0x0080011a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080011a        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0080011a        0x3 lcd_clock.o
                0x0080011a                isMorning
                0x0080011b                seconds
                0x0080011c                minutes
 .bss           0x0080011d        0x0 lcd.o
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x0080011d        0x0 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0080011d                PROVIDE (__bss_end, .)
                0x000004cc                __data_load_start = LOADADDR (.data)
                0x000004e6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080011d        0x0
                0x0080011d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080011d                PROVIDE (__noinit_end, .)
                0x0080011d                _end = .
                0x0080011d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x954
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
 .stab          0x000006cc      0x1b0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x0000087c       0xd8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000       0xb4
 *(.stabstr)
 .stabstr       0x00000000       0xb4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 lcd_clock.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 lcd.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x48
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 lcd_clock.o
 .debug_aranges
                0x00000028       0x20 lcd.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x961
 *(.debug_info)
 .debug_info    0x00000000      0x3ae lcd_clock.o
 .debug_info    0x000003ae      0x5b3 lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x3fb
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x184 lcd_clock.o
 .debug_abbrev  0x00000184      0x277 lcd.o

.debug_line     0x00000000      0x201
 *(.debug_line)
 .debug_line    0x00000000       0xd3 lcd_clock.o
 .debug_line    0x000000d3      0x12e lcd.o

.debug_frame    0x00000000      0x1f4
 *(.debug_frame)
 .debug_frame   0x00000000       0xa8 lcd_clock.o
 .debug_frame   0x000000a8      0x14c lcd.o

.debug_str      0x00000000      0x209
 *(.debug_str)
 .debug_str     0x00000000      0x13c lcd_clock.o
                                0x17a (size before relaxing)
 .debug_str     0x0000013c       0xcd lcd.o
                                0x1b0 (size before relaxing)

.debug_loc      0x00000000      0x625
 *(.debug_loc)
 .debug_loc     0x00000000      0x128 lcd_clock.o
 .debug_loc     0x00000128      0x4fd lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lcd_clock.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x18 lcd_clock.o
 .debug_ranges  0x00000018       0x30 lcd.o

Cross Reference Table

Symbol                                            File
LCD_update_time                                   lcd_clock.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_clear_bss.o)
                                                  lcd_clock.o
__do_copy_data                                    /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_copy_data.o)
                                                  lcd_clock.o
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
__udivmodqi4                                      /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_udivmodqi4.o)
                                                  lcd_clock.o
__vector_1                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_10                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_11                                       lcd_clock.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_13                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_14                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_15                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_16                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_17                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_18                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_19                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_2                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_20                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_21                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_22                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_23                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_24                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_25                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
_exit                                             /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.7.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
hours                                             lcd_clock.o
isMorning                                         lcd_clock.o
itoa                                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
                                                  lcd_clock.o
lcd_clrscr                                        lcd.o
                                                  lcd_clock.o
lcd_command                                       lcd.o
lcd_data                                          lcd.o
lcd_getxy                                         lcd.o
lcd_gotoxy                                        lcd.o
                                                  lcd_clock.o
lcd_home                                          lcd.o
lcd_init                                          lcd.o
                                                  lcd_clock.o
lcd_putc                                          lcd.o
lcd_puts                                          lcd.o
                                                  lcd_clock.o
lcd_puts_p                                        lcd.o
main                                              lcd_clock.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/crtm328p.o
minutes                                           lcd_clock.o
seconds                                           lcd_clock.o
strrev                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr5/libc.a(itoa.o)
time                                              lcd_clock.o
wait_until_key_pressed                            lcd_clock.o
